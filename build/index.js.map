{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAASC,EAAE,CAACC,IAAlB,EAAwB;;AACxB,MAAM;AAAEC,EAAAA;AAAF,IAAwBF,EAAE,CAACG,MAAjC,EAAyC;;AACzC,MAAM;AAAEC,EAAAA;AAAF,IAAgBJ,EAAE,CAACK,OAAzB,EAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,iBAAiB,CAAC,mCAAD,EAAsC;AACnD;AACAI,EAAAA,KAAK,EAAEP,EAAE,CAAC,+BAAD,CAF0C;AAEP;AAC5CQ,EAAAA,IAAI,EAAE,QAH6C;AAGnC;AAChBC,EAAAA,QAAQ,EAAE,QAJyC;AAI/B;AACpBC,EAAAA,QAAQ,EAAE,CACNV,EAAE,CAAC,+BAAD,CADI,EAENA,EAAE,CAAC,aAAD,CAFI,EAGNA,EAAE,CAAC,oBAAD,CAHI,CALyC;AAUnDW,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE;AACRC,MAAAA,IAAI,EAAE;AADE,KADJ;AAIRC,IAAAA,gBAAgB,EAAE;AACdD,MAAAA,IAAI,EAAE;AADQ;AAJV,GAVuC;;AAkBnD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIE,EAAAA,IAAI,EAAGC,KAAD,IAAW;AACd,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,WAAJ;AAEAjB,IAAAA,EAAE,CAACkB,QAAH,CAAY;AACRC,MAAAA,GAAG,EAAE;AADG,KAAZ,EAEGC,IAFH,CAEST,UAAD,IAAgB;AACpBI,MAAAA,KAAK,CAACM,aAAN,CAAoB;AAChBV,QAAAA,UAAU,EAAEA;AADI,OAApB;AAGH,KAND;;AAOA,QAAII,KAAK,CAACL,UAAN,CAAiBC,UAArB,EAAiC;AAC7BK,MAAAA,IAAI,GAAGD,KAAK,CAACL,UAAN,CAAiBC,UAAxB;AACAM,MAAAA,WAAW,GAAGF,KAAK,CAACL,UAAN,CAAiBG,gBAA/B;AACH;;AAEDS,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACL,UAAlB;;AAEA,aAASc,cAAT,CAAwBC,CAAxB,EAA2B;AACvBV,MAAAA,KAAK,CAACM,aAAN,CAAoB;AAChBR,QAAAA,gBAAgB,EAAEY,CAAC,CAACC,MAAF,CAASC;AADX,OAApB;AAGH;;AAED,WACI,+EACI;AAAQ,cAAQ,EAAEH,cAAlB;AAAkC,WAAK,EAAEP;AAAzC,OACKD,IAAI,CAACY,GAAL,CAAUC,GAAD,IAAS;AACf,aACI;AAAQ,aAAK,EAAEA,GAAG,CAACC,EAAnB;AAAuB,WAAG,EAAED,GAAG,CAACC;AAAhC,SACKD,GAAG,CAACE,IADT,CADJ;AAKH,KANA,CADL,CADJ,EAUI;AAAO,UAAI,EAAC,MAAZ;AAAmB,iBAAW,EAAC;AAA/B,MAVJ,CADJ;AAcF,GAhEkD;;AAiEnD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,IAAI,EAAE,UAAUjB,KAAV,EAAiB;AACnB,WAAO,IAAP;AACH;AA3EkD,CAAtC,CAAjB;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,MAAM;AAAEhB,EAAAA;AAAF,IAASC,EAAE,CAACC,IAAlB,EAAwB;;AACxB,MAAM;AAAEC,EAAAA;AAAF,IAAwBF,EAAE,CAACG,MAAjC,EAAyC;;AACzC,MAAM;AAAEC,EAAAA;AAAF,IAAgBJ,EAAE,CAACK,OAAzB,EAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,iBAAiB,CAAC,kCAAD,EAAqC;AAClD;AACAI,EAAAA,KAAK,EAAEP,EAAE,CAAC,8BAAD,CAFyC;AAEP;AAC3CQ,EAAAA,IAAI,EAAE,QAH4C;AAGlC;AAChBC,EAAAA,QAAQ,EAAE,QAJwC;AAI9B;AACpBC,EAAAA,QAAQ,EAAE,CACNV,EAAE,CAAC,8BAAD,CADI,EAENA,EAAE,CAAC,aAAD,CAFI,EAGNA,EAAE,CAAC,oBAAD,CAHI,CALwC;AAUlDW,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE;AACRC,MAAAA,IAAI,EAAE;AADE,KADJ;AAIRC,IAAAA,gBAAgB,EAAE;AACdD,MAAAA,IAAI,EAAE;AADQ;AAJV,GAVsC;;AAkBlD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIE,EAAAA,IAAI,EAAGC,KAAD,IAAW;AACd,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,WAAJ;AAEAjB,IAAAA,EAAE,CAACkB,QAAH,CAAY;AACRC,MAAAA,GAAG,EAAE;AADG,KAAZ,EAEGC,IAFH,CAEST,UAAD,IAAgB;AACpBI,MAAAA,KAAK,CAACM,aAAN,CAAoB;AAChBV,QAAAA,UAAU,EAAEA;AADI,OAApB;AAGH,KAND;;AAOA,QAAII,KAAK,CAACL,UAAN,CAAiBC,UAArB,EAAiC;AAC7BK,MAAAA,IAAI,GAAGD,KAAK,CAACL,UAAN,CAAiBC,UAAxB;AACAM,MAAAA,WAAW,GAAGF,KAAK,CAACL,UAAN,CAAiBG,gBAA/B;AACH;;AAEDS,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACL,UAAlB;;AAEA,aAASc,cAAT,CAAwBC,CAAxB,EAA2B;AACvBV,MAAAA,KAAK,CAACM,aAAN,CAAoB;AAChBR,QAAAA,gBAAgB,EAAEY,CAAC,CAACC,MAAF,CAASC;AADX,OAApB;AAGH;;AAED,WACI,+EACI;AAAQ,cAAQ,EAAEH,cAAlB;AAAkC,WAAK,EAAEP;AAAzC,OACKD,IAAI,CAACY,GAAL,CAAUC,GAAD,IAAS;AACf,aACI;AAAQ,aAAK,EAAEA,GAAG,CAACC,EAAnB;AAAuB,WAAG,EAAED,GAAG,CAACC;AAAhC,SACKD,GAAG,CAACE,IADT,CADJ;AAKH,KANA,CADL,CADJ,EAUI;AAAO,UAAI,EAAC,MAAZ;AAAmB,iBAAW,EAAC;AAA/B,MAVJ,CADJ;AAcF,GAhEiD;;AAiElD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,IAAI,EAAE,UAAUjB,KAAV,EAAiB;AACnB,WAAO,IAAP;AACH;AA3EiD,CAArC,CAAjB;;;;;;;;;;;AC5BA;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNA;AACA;AAEA","sources":["webpack://react-gut-blocks/./src/blocks/my-new-block-course2/my-new-block-course2.js","webpack://react-gut-blocks/./src/blocks/my-new-block-course/my-new-block-course.js","webpack://react-gut-blocks/./src/blocks/my-new-block-course2/my-new-block-course2.scss","webpack://react-gut-blocks/./src/blocks/my-new-block-course/my-new-block-course.scss","webpack://react-gut-blocks/external window [\"wp\",\"element\"]","webpack://react-gut-blocks/webpack/bootstrap","webpack://react-gut-blocks/webpack/runtime/compat get default export","webpack://react-gut-blocks/webpack/runtime/define property getters","webpack://react-gut-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://react-gut-blocks/webpack/runtime/make namespace object","webpack://react-gut-blocks/./src/index.js"],"sourcesContent":["/**\r\n * BLOCK: react-lifecycle-block\r\n *\r\n * Registering a basic block with Gutenberg.\r\n * Simple block, renders and saves the same content without any interactivity.\r\n */\r\n\r\n//  Import CSS.\r\n// import \"./style.scss\";\r\n// import \"./editor.scss\";\r\n\r\nconst { __ } = wp.i18n; // Import __() from wp.i18n\r\nconst { registerBlockType } = wp.blocks; // Import registerBlockType() from wp.blocks\r\nconst { Component } = wp.element; // Import the Component base class from the React.js abstraction\r\n\r\n/**\r\n * Register: aa Gutenberg Block.\r\n *\r\n * Registers a new block provided a unique name and an object defining its\r\n * behavior. Once registered, the block is made editor as an option to any\r\n * editor interface where blocks are implemented.\r\n *\r\n * @link https://wordpress.org/gutenberg/handbook/block-api/\r\n * @param  {string}   name     Block name.\r\n * @param  {Object}   settings Block settings.\r\n * @return {?WPBlock}          The block, if it has been successfully\r\n *                             registered; otherwise `undefined`.\r\n */\r\nregisterBlockType(\"course-block/my-new-block-course2\", {\r\n    // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\r\n    title: __(\"new course block2 - CGB Block\"), // Block title.\r\n    icon: \"shield\", // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\r\n    category: \"common\", // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\r\n    keywords: [\r\n        __(\"new course block2 — CGB Block\"),\r\n        __(\"CGB Example\"),\r\n        __(\"create-guten-block\"),\r\n    ],\r\n    attributes: {\r\n        categories: {\r\n            type: \"object\",\r\n        },\r\n        selectedCategory: {\r\n            type: \"string\",\r\n        },\r\n    },\r\n    /**\r\n     * The edit function describes the structure of your block in the context of the editor.\r\n     * This represents what the editor will render when the block is used.\r\n     *\r\n     * The \"edit\" property must be a valid function.\r\n     *\r\n     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\r\n     */\r\n    edit: (props) => {\r\n       let cats = [];\r\n       let selectedCat;\r\n\r\n       wp.apiFetch({\r\n           url: \"/wp-json/wp/v2/categories\",\r\n       }).then((categories) => {\r\n           props.setAttributes({\r\n               categories: categories,\r\n           });\r\n       });\r\n       if (props.attributes.categories) {\r\n           cats = props.attributes.categories;\r\n           selectedCat = props.attributes.selectedCategory;\r\n       }\r\n\r\n       console.log(props.attributes);\r\n\r\n       function updateCategory(e) {\r\n           props.setAttributes({\r\n               selectedCategory: e.target.value,\r\n           });\r\n       }\r\n\r\n       return (\r\n           <div>\r\n               <select onChange={updateCategory} value={selectedCat}>\r\n                   {cats.map((cat) => {\r\n                       return (\r\n                           <option value={cat.id} key={cat.id}>\r\n                               {cat.name}\r\n                           </option>\r\n                       );\r\n                   })}\r\n               </select>\r\n               <input type=\"text\" placeholder=\"2\"></input>\r\n           </div>\r\n       );\r\n    },\r\n    /**\r\n     * The save function defines the way in which the different attributes should be combined\r\n     * into the final markup, which is then serialized by Gutenberg into post_content.\r\n     *\r\n     * The \"save\" property must be specified and must be a valid function.\r\n     *\r\n     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\r\n     */\r\n    save: function (props) {\r\n        return null;\r\n    },\r\n});\r\n","/**\r\n * BLOCK: react-lifecycle-block\r\n *\r\n * Registering a basic block with Gutenberg.\r\n * Simple block, renders and saves the same content without any interactivity.\r\n */\r\n\r\n//  Import CSS.\r\n// import \"./style.scss\";\r\n// import \"./editor.scss\";\r\n\r\nconst { __ } = wp.i18n; // Import __() from wp.i18n\r\nconst { registerBlockType } = wp.blocks; // Import registerBlockType() from wp.blocks\r\nconst { Component } = wp.element; // Import the Component base class from the React.js abstraction\r\n\r\n/**\r\n * Register: aa Gutenberg Block.\r\n *\r\n * Registers a new block provided a unique name and an object defining its\r\n * behavior. Once registered, the block is made editor as an option to any\r\n * editor interface where blocks are implemented.\r\n *\r\n * @link https://wordpress.org/gutenberg/handbook/block-api/\r\n * @param  {string}   name     Block name.\r\n * @param  {Object}   settings Block settings.\r\n * @return {?WPBlock}          The block, if it has been successfully\r\n *                             registered; otherwise `undefined`.\r\n */\r\nregisterBlockType(\"course-block/my-new-block-course\", {\r\n    // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\r\n    title: __(\"new course block - CGB Block\"), // Block title.\r\n    icon: \"shield\", // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\r\n    category: \"common\", // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\r\n    keywords: [\r\n        __(\"new course block — CGB Block\"),\r\n        __(\"CGB Example\"),\r\n        __(\"create-guten-block\"),\r\n    ],\r\n    attributes: {\r\n        categories: {\r\n            type: \"object\",\r\n        },\r\n        selectedCategory: {\r\n            type: \"string\",\r\n        },\r\n    },\r\n    /**\r\n     * The edit function describes the structure of your block in the context of the editor.\r\n     * This represents what the editor will render when the block is used.\r\n     *\r\n     * The \"edit\" property must be a valid function.\r\n     *\r\n     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\r\n     */\r\n    edit: (props) => {\r\n       let cats = [];\r\n       let selectedCat;\r\n\r\n       wp.apiFetch({\r\n           url: \"/wp-json/wp/v2/categories\",\r\n       }).then((categories) => {\r\n           props.setAttributes({\r\n               categories: categories,\r\n           });\r\n       });\r\n       if (props.attributes.categories) {\r\n           cats = props.attributes.categories;\r\n           selectedCat = props.attributes.selectedCategory;\r\n       }\r\n\r\n       console.log(props.attributes);\r\n\r\n       function updateCategory(e) {\r\n           props.setAttributes({\r\n               selectedCategory: e.target.value,\r\n           });\r\n       }\r\n\r\n       return (\r\n           <div>\r\n               <select onChange={updateCategory} value={selectedCat}>\r\n                   {cats.map((cat) => {\r\n                       return (\r\n                           <option value={cat.id} key={cat.id}>\r\n                               {cat.name}\r\n                           </option>\r\n                       );\r\n                   })}\r\n               </select>\r\n               <input type=\"text\" placeholder=\"n0\"></input>\r\n           </div>\r\n       );\r\n    },\r\n    /**\r\n     * The save function defines the way in which the different attributes should be combined\r\n     * into the final markup, which is then serialized by Gutenberg into post_content.\r\n     *\r\n     * The \"save\" property must be specified and must be a valid function.\r\n     *\r\n     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\r\n     */\r\n    save: function (props) {\r\n        return null;\r\n    },\r\n});\r\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './blocks/my-new-block-course/my-new-block-course.js';\r\nimport \"./blocks/my-new-block-course/my-new-block-course.scss\";\r\n\r\nimport \"./blocks/my-new-block-course2/my-new-block-course2.js\";\r\nimport \"./blocks/my-new-block-course2/my-new-block-course2.scss\";"],"names":["__","wp","i18n","registerBlockType","blocks","Component","element","title","icon","category","keywords","attributes","categories","type","selectedCategory","edit","props","cats","selectedCat","apiFetch","url","then","setAttributes","console","log","updateCategory","e","target","value","map","cat","id","name","save"],"sourceRoot":""}